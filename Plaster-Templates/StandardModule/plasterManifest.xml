<?xml version="1.0" encoding="utf-8"?>
<plasterManifest schemaVersion="1.1" templateType="Project" xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">

  <metadata>
    <name>Standard Module</name>
    <id>17742cf3-93f9-4f62-ae26-2f34b86f14a3</id>
    <version>1.0.0</version>
    <title>Standard Module Template</title>
    <description>Automate PowerShell Modules</description>
    <author>Christian Solje</author>
    <tags>Module, ScriptModule, ModuleManifest</tags>
  </metadata>

  <parameters>
    <parameters name="ModuleName" type="text" prompt="Enter the name of your module" />
    <parameters name="ModuleDesc" type="text" prompt="Brief description on this module" />
    <parameter name="ModuleVersion" type="text" prompt="Version number" default='0.0.1' />
    <parameter name="ModuleCompanyName" type="text" prompt="Company name" default='N/A' />
    <parameter name="ModuleAuthor" type="user-fullname" prompt="Author" default='Christian'/>
    <parameter name="ModuleEmail" type="user-email" prompt="Email" default="project@email.com"/>

    <parameter name="ModulePowerShellVersion" type="choice" store="text" prompt="Minimum PowerShell version" default="0">
        <choice label="&amp;5.1" help="Minimum PowerShell Version required is 5.1" value="5.1" />
        <choice label="&amp;6.0" help="Minimum PowerShell Version required is 6.0 (PowerShell Core/.Net)" value="6.0" />
        <choise label="&amp;7.0" help="Minimum PowerShell Version required is 7.0" value="7.0" />
    </parameter>
    <parameter name='License' type='choice' default='1' store='text' prompt='Select a license for your module'>
        <choice label='&amp;MIT' help="Adds an MIT license file." value="MIT"/>
        <choice label='&amp;None' help="No license specified." value="None"/>
    </parameter>
    <parameter name='Options' type='multichoice' default='0,1,2' store='text' prompt='Select desired options'>
        <choice label='&amp;Pester test support' help="Adds Tests directory and a starter Pester Tests file." value="Pester"/>
        <choice label='&amp;Git' help="Adds a .gitignore file." value="Git"/>
        <choice label="&amp;Help" help="Creates a en-US folder within the module root for about_help files." value="Help" />
        <choice label="&amp;Classes" help="Creates a Classes folder within the module root for .cs files." value="Classes" />
        <choice label='&amp;None' help="No options specified." value="None"/>
    </parameter>
    <parameter name='Editor' type='choice' prompt='Select a editor for editor integration (or None):' default='1' store='text' >
        <choice label='&amp;None' help="No editor specified." value="None"/>
        <choice label='Visual Studio &amp;Code' help="Your editor is Visual Studio Code." value="VSCode"/>
    </parameter>
  </parameters>
  <content>
    <newModuleManifest destination='${PLASTER_PARAM_ModuleName}\src\${PLASTER_PARAM_ModuleName}.psd1'
        moduleVersion='$PLASTER_PARAM_ModuleVersion'
        rootModule='${PLASTER_PARAM_ModuleName}.psm1'
        author='$PLASTER_PARAM_ModuleAuthor'
        description='$PLASTER_PARAM_ModuleDesc'
        companyName='$PLASTER_PARAM_ModuleCompanyName'
        powerShellVersion='$PLASTER_PARAM_ModulePowerShellVersion'
        encoding='UTF8-NoBOM'
        openInEditor="true"/>

    <!-- Please see file contents for additional tokenization base on Plaster manifest answers. -->
    <templateFile source='template.psm1' destination='${PLASTER_PARAM_ModuleName}\src\${PLASTER_PARAM_ModuleName}.psm1'/>

    <message>&#10;&#10;Scaffolding your PowerShell Module, please stay awesome...&#10;&#10;&#10;</message>
    <message> Creating you folders for module: $PLASTER_PARAM_ModuleName </message>

    <file destination='${PLASTER_PARAM_ModuleName}\src\Functions\Public\' source='' />
    <templateFile source='.gitkeep' destination='${PLASTER_PARAM_ModuleName}\src\Functions\Public\.gitkeep' />
    <file destination='${PLASTER_PARAM_ModuleName}\src\Functions\Private\' source='' />
    <templateFile source='.gitkeep' destination='${PLASTER_PARAM_ModuleName}\src\Functions\Private\.gitkeep' />
    <file condition='$PLASTER_PARAM_License -contains "MIT"' source='LICENSE' description='${PLASTER_PARAM_ModuleName}\LICENSE' />
    <file condition='$PLASTER_PARAM_ModuleFolders -contains "Help"' destination='${PLASTER_PARAM_ModuleName}\src\en-US\' source='' />
    <templateFile condition='$PLASTER_PARAM_ModuleFolders -contains "Help"' source='about_template.help.txt.ps1' destination='${PLASTER_PARAM_ModuleName}\src\en-US\about_${PLASTER_PARAM_ModuleName}.help.txt' />
    <file condition='$PLASTER_PARAM_ModuleFolders -contains "Classes"' destination='${PLASTER_PARAM_ModuleName}\src\Classes\' source='' />
    <templateFile condition='$PLASTER_PARAM_ModuleFolders -contains "Classes"' source='template.cs.ps1' destination='${PLASTER_PARAM_ModuleName}\src\Classes\${PLASTER_PARAM_ModuleName}.cs' />
    <file condition='$PLASTER_PARAM_ModuleFolders -contains "Binaries"' destination='${PLASTER_PARAM_ModuleName}\src\Binaries\' source='' />
    <templateFile condition='$PLASTER_PARAM_ModuleFolders -contains "Binaries"' source='.gitkeep' destination='${PLASTER_PARAM_ModuleName}\src\Binaries\.gitkeep' />
    <file condition='$PLASTER_PARAM_ModuleFolders -contains "Manifests"' destination='${PLASTER_PARAM_ModuleName}\src\Config\' source='' />
    <templateFile condition='$PLASTER_PARAM_ModuleFolders -contains "Manifests"' source='.gitkeep' destination='${PLASTER_PARAM_ModuleName}\src\Config\.gitkeep' />
    <file condition='$PLASTER_PARAM_ModuleFolders-contains "Scripts"' destination='${PLASTER_PARAM_ModuleName}\src\Scripts\' source='' />
    <templateFile condition='$PLASTER_PARAM_ModuleFolders -contains "Scripts"' source='placeholder.ps1' destination='${PLASTER_PARAM_ModuleName}\src\Scripts\placeholder.ps1' />

    <templateFile source='ReadMe.md' destination='${PLASTER_PARAM_ModuleName}\ReadMe.md' />

    <message> Setting pester settings for: $PLASTER_PARAM_ModuleName </message>
    <file condition='$PLASTER_PARAM_ProjectPester -eq "Yes"' destination='${PLASTER_PARAM_ModuleName}\tests\' source='' />
    <templateFile source='Manifest.Tests.ps1' destination='${PLASTER_PARAM_ModuleName}\tests\Manifest.Tests.ps1'/>

    <message> Setting editor workspace settings for: $PLASTER_PARAM_Editor </message>
    <file condition="($PLASTER_PARAM_Editor -eq 'VSCode')"
      source='editor\VSCode\settings.json'
      destination='${PLASTER_PARAM_ModuleName}\.vscode\settings.json' />

    <message> Creating VSCode files </message>
    <file condition="(($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_ProjectPester -eq 'Yes'))"
      source='editor\VSCode\tasks.json'
      destination='${PLASTER_PARAM_ModuleName}\.vscode\tasks.json' />
    <file condition="(($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_ProjectPester -eq 'Yes'))"
      source='editor\VSCode\powershell.code-snippets'
      destination='${PLASTER_PARAM_ModuleName}\.vscode\powershell.code-snippets' />

    <message> Verifying a minimum version of Pester (4.0.3) is installed. </message>
    <requireModule name="Pester" condition="$PLASTER_PARAM_ProjectPester -eq 'Yes'" minimumVersion="4.0.3"
        message="Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 3.4.0, VS Code will not display Pester warnings and errors in the Problems panel."/>


  </content>
</plasterManifest>